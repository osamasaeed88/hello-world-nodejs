---
- name: Deploy Node.js app from ECR
  hosts: app-servers
  become: yes

  vars:
    ecr_region: "us-east-1"
    ecr_repo: "211125346130.dkr.ecr.us-east-1.amazonaws.com/task/node-app"
    image_tag: "latest"
    container_name: "nodejs-app"

  tasks:
    - name: Ensure Python 3 and pip are installed
      apt:
        name:
          - python3
          - python3-pip
        state: present
        update_cache: yes

    - name: Install six Python module
      command: pip3 install six --break-system-packages

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Start and enable Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Install AWS CLI v2
      shell: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -o awscliv2.zip
        sudo ./aws/install
      args:
        creates: /usr/local/bin/aws

    - name: Authenticate to Amazon ECR
      shell: |
        aws ecr get-login-password --region {{ ecr_region }} | docker login --username AWS --password-stdin {{ ecr_repo }}

    - name: Pull latest Docker image from ECR
      shell: docker pull {{ ecr_repo }}:{{ image_tag }}

    - name: Stop existing container (if running)
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent
      ignore_errors: yes

    - name: Run Docker container
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ ecr_repo }}:{{ image_tag }}"
        state: started
        restart_policy: always
        published_ports:
          - "80:3000"

    - name: Ensure container is running
      shell: docker ps -q -f name={{ container_name }}
      register: container_status
      failed_when: container_status.stdout == ""
